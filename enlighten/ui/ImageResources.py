import logging

from enlighten import common

import did_you_know_rc
assert did_you_know_rc

if common.use_pyside2():
    from PySide2 import QtCore
else:    
    from PySide6 import QtCore

log = logging.getLogger(__name__)

class ImageResources:
    """
    Device (model) images come from enlighten/assets/uic_qrc/images/devices. 
    However, they also have to be listed in devices.qrc.  They are then exposed 
    through Qt through QtCore.QDirIterator.Subdirectories, which is iterated in 
    this ctor.

    The final image is updated in EEPROMEditor.update_from_spec, using a pathname 
    generated by Spectrometer.get_image_pathname.
    """
    def __init__(self):
        log.debug("iterating subdirectories")
        self.resources = []

        it = QtCore.QDirIterator(":", flags=QtCore.QDirIterator.Subdirectories)
        while it.hasNext():
            pathname = it.next()
            self.resources.append(pathname)
            # log.debug(f"  {pathname}")

        self.resources.sort()
        log.debug(f"found {len(self.resources)} resources")

    def contains(self, name):
        if name is None:
            return False
        return name in self.resources
